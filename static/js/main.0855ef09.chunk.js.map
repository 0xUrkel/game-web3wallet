{"version":3,"sources":["web3mobile/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["web3","initialLogin","sendTransaction","to","value","gas","data","a","eth","getAccounts","from","undefined","on","transactionHash","console","log","error","message","signLoginMessage","expiration","Math","round","Date","now","toString","personal","sign","signature","signedLoginMessge","window","onload","queryString","location","search","urlParams","URLSearchParams","action","get","networkId","onboard","Onboard","parseInt","subscriptions","address","reload","wallet","Web3","provider","network","walletSelect","wallets","walletName","preferred","walletCheck","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4YAGIA,E,+FAEAC,GAAwB,E,SAwDbC,E,oFAAf,WACEC,EACAC,EACAC,EACAC,GAJF,eAAAC,EAAA,sEAOsBP,EAAKQ,IAAIC,cAP/B,OAOQC,EAPR,OAO8C,GAC5CV,EAAKQ,IACFN,gBAAgB,CACfQ,OACAP,KACAC,QACAC,IAAKA,QAAOM,EACZL,KAAMA,IAEPM,GAAG,mBAAmB,SAACC,GACtBC,QAAQC,IAAI,SAAUF,MAEvBD,GAAG,SAAS,SAACI,GACZF,QAAQC,IAAI,OAAQC,EAAMC,YApBhC,4C,+BAwBeC,I,2EAAf,oCAAAX,EAAA,sEAC8BP,EAAKQ,IAAIC,cADvC,cACQC,EADR,OACsD,GAC9CS,EAAqBC,KAAKC,MAAMC,KAAKC,MAAQ,IAAO,KAAKC,WACzDP,EAHR,UAG6BP,EAH7B,YAGqCS,GAHrC,SAIkCnB,EAAKQ,IAAIiB,SAASC,KAAKT,EAASP,EAAM,IAJxE,OAIQiB,EAJR,OAKQC,EALR,UAKuCD,EALvC,YAKoDjB,EALpD,YAK4DS,GAC1DL,QAAQC,IAAIa,GANd,6C,sBA9EAC,OAAOC,OAAP,sBAAgB,4CAAAvB,EAAA,6DAERwB,EAAcF,OAAOG,SAASC,OAC9BC,EAAY,IAAIC,gBAAgBJ,GAChCK,EAASF,EAAUG,IAAI,UACvBC,EAAYJ,EAAUG,IAAI,aAC1BlC,EAAK+B,EAAUG,IAAI,MACnBjC,EAAQ8B,EAAUG,IAAI,SACtB/B,EAAO4B,EAAUG,IAAI,SAAW,GAChChC,EAAM6B,EAAUG,IAAI,aAAU1B,EAG9B4B,EAAUC,YAAQ,CACtBF,UAAWG,SAASH,GAAa,KACjCI,cAAe,CACbC,QAAS,WACF1C,GACH4B,OAAOG,SAASY,UAGpBC,OAAQ,SAACA,GACP7C,EAAO,IAAI8C,IAAKD,EAAOE,WAEzBC,QAAS,WACF/C,GACH4B,OAAOG,SAASY,WAItBK,aAAc,CACZC,QAAS,CAAC,CAAEC,WAAY,WAAYC,WAAW,OA9BrC,UAiCeb,EAAQU,eAjCvB,uBAkCOpB,OAAOG,SAASY,SAlCvB,UAmCRL,EAAQc,cAnCA,QAoCdpD,GAAe,EAEA,UAAXmC,GACFlB,IAGa,SAAXkB,GAAqBjC,GAAMC,GAC7BF,EAAgBC,EAAIC,EAAOC,EAAKC,GA3CpB,4C,YCDDgD,MAJf,WACE,OAAO,yBCWMC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,gCAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0855ef09.chunk.js","sourcesContent":["import Onboard from \"bnc-onboard\";\nimport Web3 from \"web3\";\n\nlet web3: Web3;\n\nlet initialLogin: boolean = true;\n\nwindow.onload = async () => {\n  // get params\n  const queryString = window.location.search;\n  const urlParams = new URLSearchParams(queryString);\n  const action = urlParams.get(\"action\");\n  const networkId = urlParams.get(\"networkId\");\n  const to = urlParams.get(\"to\");\n  const value = urlParams.get(\"value\");\n  const data = urlParams.get(\"data\") || \"\";\n  const gas = urlParams.get(\"gas\") || undefined;\n\n  // set up onboard.js\n  const onboard = Onboard({\n    networkId: parseInt(networkId || \"1\"),\n    subscriptions: {\n      address: () => {\n        if (!initialLogin) {\n          window.location.reload();\n        }\n      },\n      wallet: (wallet) => {\n        web3 = new Web3(wallet.provider);\n      },\n      network: () => {\n        if (!initialLogin) {\n          window.location.reload();\n        }\n      },\n    },\n    walletSelect: {\n      wallets: [{ walletName: \"metamask\", preferred: true }],\n    },\n  });\n  const walletSelected = await onboard.walletSelect();\n  if (!walletSelected) window.location.reload();\n  await onboard.walletCheck();\n  initialLogin = false;\n\n  if (action === \"login\") {\n    signLoginMessage();\n  }\n\n  if (action === \"send\" && to && value) {\n    sendTransaction(to, value, gas, data)\n  }\n};\n\n/*\nconst to = \"0xB6B8bB1e16A6F73f7078108538979336B9B7341C\"\nconst value = \"12300000000000000\"\nconst gas = \"21000\"\nconst data = \"0x\"\nsendTransaction(to, value, gas, data);\n*/\nasync function sendTransaction(\n  to: string,\n  value: string,\n  gas?: string,\n  data?: string\n) {\n\n  const from = (await web3.eth.getAccounts())[0];\n  web3.eth\n    .sendTransaction({\n      from,\n      to,\n      value,\n      gas: gas || undefined,\n      data: data,\n    })\n    .on(\"transactionHash\", (transactionHash: string) => {\n      console.log(\"txhahs\", transactionHash);\n    })\n    .on(\"error\", (error: any) => {\n      console.log(\"errr\", error.message);\n    });\n}\n\nasync function signLoginMessage() {\n  const from: string = (await web3.eth.getAccounts())[0];\n  const expiration: string = Math.round(Date.now() / 1000 + 300).toString();\n  const message: string = `${from}-${expiration}`;\n  const signature: string = await web3.eth.personal.sign(message, from, \"\");\n  const signedLoginMessge: string = `${signature}-${from}-${expiration}`;\n  console.log(signedLoginMessge);\n}\n","import \"./web3mobile\"\n\nfunction App() {\n  return <div></div>;\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}